;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 24/04/2022 12:31:30 Õ
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x287F      	GOTO       127
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AC      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AD      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;FINALCODE.c,63 :: 		void interrupt() {  //interrrupt handler
;FINALCODE.c,64 :: 		if (INTCON.TMR0IF==1) {  //timer interrupt
0x000B	0x1D0B      	BTFSS      INTCON, 2
0x000C	0x2813      	GOTO       L_interrupt11
;FINALCODE.c,65 :: 		counter++;
0x000D	0x0AA4      	INCF       _counter, 1
0x000E	0x1903      	BTFSC      STATUS, 2
0x000F	0x0AA5      	INCF       _counter+1, 1
;FINALCODE.c,66 :: 		INTCON.TMR0IF=0;
0x0010	0x110B      	BCF        INTCON, 2
;FINALCODE.c,67 :: 		TMR0=6;
0x0011	0x3006      	MOVLW      6
0x0012	0x0081      	MOVWF      TMR0
;FINALCODE.c,68 :: 		}
L_interrupt11:
;FINALCODE.c,69 :: 		if(INTF_bit==1){  //external interrupt
0x0013	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x0014	0x281B      	GOTO       L_interrupt12
;FINALCODE.c,70 :: 		INTF_bit=0;
0x0015	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;FINALCODE.c,71 :: 		PORTB.B1=1;
0x0016	0x1486      	BSF        PORTB, 1
;FINALCODE.c,72 :: 		ex=1;
0x0017	0x3001      	MOVLW      1
0x0018	0x00A0      	MOVWF      _ex
0x0019	0x3000      	MOVLW      0
0x001A	0x00A1      	MOVWF      _ex+1
;FINALCODE.c,73 :: 		}
L_interrupt12:
;FINALCODE.c,74 :: 		}
L_end_interrupt:
L__interrupt26:
0x001B	0x082D      	MOVF       ___savePCLATH, 0
0x001C	0x008A      	MOVWF      PCLATH
0x001D	0x0E2C      	SWAPF      ___saveSTATUS, 0
0x001E	0x0083      	MOVWF      STATUS
0x001F	0x0EFF      	SWAPF      R15, 1
0x0020	0x0E7F      	SWAPF      R15, 0
0x0021	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0022	0x1283      	BCF        STATUS, 5
0x0023	0x1303      	BCF        STATUS, 6
0x0024	0x082B      	MOVF       ___DoICPAddr+1, 0
0x0025	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0026	0x082A      	MOVF       ___DoICPAddr, 0
0x0027	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0028	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0029	0x2022      	CALL       _____DoICP
0x002A	0x118A      	BCF        PCLATH, 3
0x002B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x002C	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x002D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x002E	0x0AAA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x002F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0030	0x0AAB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0031	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0032	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0033	0x2829      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0034	0x0008      	RETURN
; end of ___CC2DW
_screen:
;FINALCODE.c,17 :: 		int screen(int d){
;FINALCODE.c,18 :: 		if(d==3){
0x0035	0x3000      	MOVLW      0
0x0036	0x1283      	BCF        STATUS, 5
0x0037	0x1303      	BCF        STATUS, 6
0x0038	0x062F      	XORWF      FARG_screen_d+1, 0
0x0039	0x1D03      	BTFSS      STATUS, 2
0x003A	0x283D      	GOTO       L__screen15
0x003B	0x3003      	MOVLW      3
0x003C	0x062E      	XORWF      FARG_screen_d, 0
L__screen15:
0x003D	0x1D03      	BTFSS      STATUS, 2
0x003E	0x2844      	GOTO       L_screen0
;FINALCODE.c,19 :: 		return 0b01000000;
0x003F	0x3040      	MOVLW      64
0x0040	0x00F0      	MOVWF      R0
0x0041	0x3000      	MOVLW      0
0x0042	0x00F1      	MOVWF      R0+1
0x0043	0x286B      	GOTO       L_end_screen
;FINALCODE.c,20 :: 		}
L_screen0:
;FINALCODE.c,22 :: 		if(d==2){
0x0044	0x3000      	MOVLW      0
0x0045	0x062F      	XORWF      FARG_screen_d+1, 0
0x0046	0x1D03      	BTFSS      STATUS, 2
0x0047	0x284A      	GOTO       L__screen16
0x0048	0x3002      	MOVLW      2
0x0049	0x062E      	XORWF      FARG_screen_d, 0
L__screen16:
0x004A	0x1D03      	BTFSS      STATUS, 2
0x004B	0x2851      	GOTO       L_screen1
;FINALCODE.c,23 :: 		return 0b01111001;
0x004C	0x3079      	MOVLW      121
0x004D	0x00F0      	MOVWF      R0
0x004E	0x3000      	MOVLW      0
0x004F	0x00F1      	MOVWF      R0+1
0x0050	0x286B      	GOTO       L_end_screen
;FINALCODE.c,24 :: 		}
L_screen1:
;FINALCODE.c,25 :: 		if(d==1){
0x0051	0x3000      	MOVLW      0
0x0052	0x062F      	XORWF      FARG_screen_d+1, 0
0x0053	0x1D03      	BTFSS      STATUS, 2
0x0054	0x2857      	GOTO       L__screen17
0x0055	0x3001      	MOVLW      1
0x0056	0x062E      	XORWF      FARG_screen_d, 0
L__screen17:
0x0057	0x1D03      	BTFSS      STATUS, 2
0x0058	0x285E      	GOTO       L_screen2
;FINALCODE.c,26 :: 		return 0b0100100;
0x0059	0x3024      	MOVLW      36
0x005A	0x00F0      	MOVWF      R0
0x005B	0x3000      	MOVLW      0
0x005C	0x00F1      	MOVWF      R0+1
0x005D	0x286B      	GOTO       L_end_screen
;FINALCODE.c,27 :: 		}
L_screen2:
;FINALCODE.c,28 :: 		if(d==0){
0x005E	0x3000      	MOVLW      0
0x005F	0x062F      	XORWF      FARG_screen_d+1, 0
0x0060	0x1D03      	BTFSS      STATUS, 2
0x0061	0x2864      	GOTO       L__screen18
0x0062	0x3000      	MOVLW      0
0x0063	0x062E      	XORWF      FARG_screen_d, 0
L__screen18:
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x286B      	GOTO       L_screen3
;FINALCODE.c,29 :: 		return 0b0110000;
0x0066	0x3030      	MOVLW      48
0x0067	0x00F0      	MOVWF      R0
0x0068	0x3000      	MOVLW      0
0x0069	0x00F1      	MOVWF      R0+1
0x006A	0x286B      	GOTO       L_end_screen
;FINALCODE.c,30 :: 		}
L_screen3:
;FINALCODE.c,32 :: 		}
L_end_screen:
0x006B	0x0008      	RETURN
; end of _screen
_initialize_proberties:
;FINALCODE.c,3 :: 		void initialize_proberties(void){
;FINALCODE.c,4 :: 		TRISC=0; //screen pins as output
0x006C	0x1683      	BSF        STATUS, 5
0x006D	0x1303      	BCF        STATUS, 6
0x006E	0x0187      	CLRF       TRISC
;FINALCODE.c,5 :: 		TRISB.B1=0; //set pin output
0x006F	0x1086      	BCF        TRISB, 1
;FINALCODE.c,6 :: 		PORTB.B1=0; // with value ==0
0x0070	0x1283      	BCF        STATUS, 5
0x0071	0x1086      	BCF        PORTB, 1
;FINALCODE.c,7 :: 		TMR0IE_bit=1;   //enable timer interrupt
0x0072	0x168B      	BSF        TMR0IE_bit, BitPos(TMR0IE_bit+0)
;FINALCODE.c,8 :: 		INTE_bit=1;  //enable external intterrupt
0x0073	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;FINALCODE.c,9 :: 		GIE_bit=1;    //enable global interrrupt
0x0074	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;FINALCODE.c,10 :: 		T0CS_bit=0;  //use internal clock which equal 4/f from crystal
0x0075	0x1683      	BSF        STATUS, 5
0x0076	0x1281      	BCF        T0CS_bit, BitPos(T0CS_bit+0)
;FINALCODE.c,11 :: 		PSA_bit=0;  //assigned prescaler to timer
0x0077	0x1181      	BCF        PSA_bit, BitPos(PSA_bit+0)
;FINALCODE.c,12 :: 		PS0_bit=0;  // with...
0x0078	0x1001      	BCF        PS0_bit, BitPos(PS0_bit+0)
;FINALCODE.c,13 :: 		PS1_bit=1;  //value....
0x0079	0x1481      	BSF        PS1_bit, BitPos(PS1_bit+0)
;FINALCODE.c,14 :: 		PS2_bit=0;//==32
0x007A	0x1101      	BCF        PS2_bit, BitPos(PS2_bit+0)
;FINALCODE.c,15 :: 		TMR0=6;   //start count from 6 to count 250
0x007B	0x3006      	MOVLW      6
0x007C	0x1283      	BCF        STATUS, 5
0x007D	0x0081      	MOVWF      TMR0
;FINALCODE.c,16 :: 		}
L_end_initialize_proberties:
0x007E	0x0008      	RETURN
; end of _initialize_proberties
_main:
0x007F	0x1283      	BCF        STATUS, 5
0x0080	0x1303      	BCF        STATUS, 6
0x0081	0x01A0      	CLRF       _ex
0x0082	0x01A1      	CLRF       33
0x0083	0x01A2      	CLRF       _seconds
0x0084	0x01A3      	CLRF       35
0x0085	0x01A4      	CLRF       _counter
0x0086	0x01A5      	CLRF       37
0x0087	0x01A6      	CLRF       _runtime
0x0088	0x01A7      	CLRF       39
0x0089	0x01A8      	CLRF       _days
0x008A	0x01A9      	CLRF       41
;FINALCODE.c,33 :: 		void main() {
;FINALCODE.c,34 :: 		initialize_proberties();
0x008B	0x206C      	CALL       _initialize_proberties
;FINALCODE.c,36 :: 		while(1){
L_main4:
;FINALCODE.c,37 :: 		if(counter==500){//count 1 second
0x008C	0x0825      	MOVF       _counter+1, 0
0x008D	0x3A01      	XORLW      1
0x008E	0x1D03      	BTFSS      STATUS, 2
0x008F	0x2892      	GOTO       L__main20
0x0090	0x30F4      	MOVLW      244
0x0091	0x0624      	XORWF      _counter, 0
L__main20:
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x28B2      	GOTO       L_main6
;FINALCODE.c,38 :: 		counter=0;
0x0094	0x01A4      	CLRF       _counter
0x0095	0x01A5      	CLRF       _counter+1
;FINALCODE.c,39 :: 		seconds++;//counter for seconds
0x0096	0x0AA2      	INCF       _seconds, 1
0x0097	0x1903      	BTFSC      STATUS, 2
0x0098	0x0AA3      	INCF       _seconds+1, 1
;FINALCODE.c,40 :: 		if(ex=1 | days==3) runtime++; //counter for  run time
0x0099	0x3000      	MOVLW      0
0x009A	0x0629      	XORWF      _days+1, 0
0x009B	0x1D03      	BTFSS      STATUS, 2
0x009C	0x289F      	GOTO       L__main21
0x009D	0x3003      	MOVLW      3
0x009E	0x0628      	XORWF      _days, 0
L__main21:
0x009F	0x3001      	MOVLW      1
0x00A0	0x1D03      	BTFSS      STATUS, 2
0x00A1	0x3000      	MOVLW      0
0x00A2	0x00F0      	MOVWF      R0
0x00A3	0x3001      	MOVLW      1
0x00A4	0x0470      	IORWF      R0, 0
0x00A5	0x00A0      	MOVWF      _ex
0x00A6	0x01A1      	CLRF       _ex+1
0x00A7	0x3000      	MOVLW      0
0x00A8	0x04A1      	IORWF      _ex+1, 1
0x00A9	0x3000      	MOVLW      0
0x00AA	0x00A1      	MOVWF      _ex+1
0x00AB	0x0820      	MOVF       _ex, 0
0x00AC	0x0421      	IORWF      _ex+1, 0
0x00AD	0x1903      	BTFSC      STATUS, 2
0x00AE	0x28B2      	GOTO       L_main7
0x00AF	0x0AA6      	INCF       _runtime, 1
0x00B0	0x1903      	BTFSC      STATUS, 2
0x00B1	0x0AA7      	INCF       _runtime+1, 1
L_main7:
;FINALCODE.c,41 :: 		}
L_main6:
;FINALCODE.c,42 :: 		if(seconds==86400){
0x00B2	0x3000      	MOVLW      0
0x00B3	0x1BA3      	BTFSC      _seconds+1, 7
0x00B4	0x30FF      	MOVLW      255
0x00B5	0x00F0      	MOVWF      R0
0x00B6	0x3A00      	XORLW      0
0x00B7	0x1D03      	BTFSS      STATUS, 2
0x00B8	0x28C3      	GOTO       L__main22
0x00B9	0x0870      	MOVF       R0, 0
0x00BA	0x3A01      	XORLW      1
0x00BB	0x1D03      	BTFSS      STATUS, 2
0x00BC	0x28C3      	GOTO       L__main22
0x00BD	0x0823      	MOVF       _seconds+1, 0
0x00BE	0x3A51      	XORLW      81
0x00BF	0x1D03      	BTFSS      STATUS, 2
0x00C0	0x28C3      	GOTO       L__main22
0x00C1	0x3080      	MOVLW      128
0x00C2	0x0622      	XORWF      _seconds, 0
L__main22:
0x00C3	0x1D03      	BTFSS      STATUS, 2
0x00C4	0x28CA      	GOTO       L_main8
;FINALCODE.c,43 :: 		seconds=0;
0x00C5	0x01A2      	CLRF       _seconds
0x00C6	0x01A3      	CLRF       _seconds+1
;FINALCODE.c,44 :: 		days++; //counter for days
0x00C7	0x0AA8      	INCF       _days, 1
0x00C8	0x1903      	BTFSC      STATUS, 2
0x00C9	0x0AA9      	INCF       _days+1, 1
;FINALCODE.c,45 :: 		}
L_main8:
;FINALCODE.c,47 :: 		if(days==3){  //run motor after 3 days from last one
0x00CA	0x3000      	MOVLW      0
0x00CB	0x0629      	XORWF      _days+1, 0
0x00CC	0x1D03      	BTFSS      STATUS, 2
0x00CD	0x28D0      	GOTO       L__main23
0x00CE	0x3003      	MOVLW      3
0x00CF	0x0628      	XORWF      _days, 0
L__main23:
0x00D0	0x1D03      	BTFSS      STATUS, 2
0x00D1	0x28D3      	GOTO       L_main9
;FINALCODE.c,48 :: 		PORTB.B1=1;
0x00D2	0x1486      	BSF        PORTB, 1
;FINALCODE.c,49 :: 		}
L_main9:
;FINALCODE.c,50 :: 		if(runtime==15){ //stop motor after 15 seconds from run time
0x00D3	0x3000      	MOVLW      0
0x00D4	0x0627      	XORWF      _runtime+1, 0
0x00D5	0x1D03      	BTFSS      STATUS, 2
0x00D6	0x28D9      	GOTO       L__main24
0x00D7	0x300F      	MOVLW      15
0x00D8	0x0626      	XORWF      _runtime, 0
L__main24:
0x00D9	0x1D03      	BTFSS      STATUS, 2
0x00DA	0x28E4      	GOTO       L_main10
;FINALCODE.c,51 :: 		runtime=0;     // and reset counters
0x00DB	0x01A6      	CLRF       _runtime
0x00DC	0x01A7      	CLRF       _runtime+1
;FINALCODE.c,52 :: 		ex=0;
0x00DD	0x01A0      	CLRF       _ex
0x00DE	0x01A1      	CLRF       _ex+1
;FINALCODE.c,53 :: 		days=0;
0x00DF	0x01A8      	CLRF       _days
0x00E0	0x01A9      	CLRF       _days+1
;FINALCODE.c,54 :: 		seconds=0;
0x00E1	0x01A2      	CLRF       _seconds
0x00E2	0x01A3      	CLRF       _seconds+1
;FINALCODE.c,55 :: 		PORTB.B1=0;
0x00E3	0x1086      	BCF        PORTB, 1
;FINALCODE.c,56 :: 		}
L_main10:
;FINALCODE.c,57 :: 		PORTC=screen(days); //set pins value to 7-segment
0x00E4	0x0828      	MOVF       _days, 0
0x00E5	0x00AE      	MOVWF      FARG_screen_d
0x00E6	0x0829      	MOVF       _days+1, 0
0x00E7	0x00AF      	MOVWF      FARG_screen_d+1
0x00E8	0x2035      	CALL       _screen
0x00E9	0x0870      	MOVF       R0, 0
0x00EA	0x0087      	MOVWF      PORTC
;FINALCODE.c,59 :: 		}
0x00EB	0x288C      	GOTO       L_main4
;FINALCODE.c,61 :: 		}
L_end_main:
0x00EC	0x28EC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [30]    _interrupt
0x0022       [7]    _____DoICP
0x0029      [12]    ___CC2DW
0x0035      [55]    _screen
0x006C      [19]    _initialize_proberties
0x007F     [110]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    TMR0IE_bit
0x0020       [2]    _ex
0x0022       [2]    _seconds
0x0024       [2]    _counter
0x0026       [2]    _runtime
0x0028       [2]    _days
0x002A       [2]    ___DoICPAddr
0x002C       [1]    ___saveSTATUS
0x002D       [1]    ___savePCLATH
0x002E       [2]    FARG_screen_d
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PS0_bit
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PSA_bit
0x0081       [0]    T0CS_bit
0x0086       [1]    TRISB
0x0087       [1]    TRISC
